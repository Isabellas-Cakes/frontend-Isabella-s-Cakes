{"version":3,"file":"js/296.71ad9b16.js","mappings":"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","sources":["webpack://interfaz/../../../src/components/transitions/dialog-transition.tsx","webpack://interfaz/../../../src/components/VVirtualScroll/VVirtualScrollItem.tsx","webpack://interfaz/../../src/composables/virtual.ts","webpack://interfaz/../../../src/components/VVirtualScroll/VVirtualScroll.tsx","webpack://interfaz/../../../src/components/VSelect/useScrolling.ts","webpack://interfaz/../../../src/components/VSelect/VSelect.tsx","webpack://interfaz/../../../src/components/VCheckbox/VCheckboxBtn.tsx","webpack://interfaz/../../../src/components/VSelectionControlGroup/VSelectionControlGroup.tsx","webpack://interfaz/../../../src/components/VSelectionControl/VSelectionControl.tsx","webpack://interfaz/../../../src/components/VMenu/VMenu.tsx"],"sourcesContent":["// Utilities\nimport { Transition } from 'vue'\nimport {\n  acceleratedEasing,\n  animate,\n  deceleratedEasing,\n  genericComponent,\n  nullifyTransforms,\n  propsFactory,\n  standardEasing,\n} from '@/util'\nimport { getTargetBox } from '@/util/box'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const makeVDialogTransitionProps = propsFactory({\n  target: [Object, Array] as PropType<HTMLElement | [x: number, y: number]>,\n}, 'v-dialog-transition')\n\nconst saved = new WeakMap<Element, Dimensions>()\n\nexport const VDialogTransition = genericComponent()({\n  name: 'VDialogTransition',\n\n  props: makeVDialogTransitionProps(),\n\n  setup (props, { slots }) {\n    const functions = {\n      onBeforeEnter (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n        ;(el as HTMLElement).style.visibility = 'hidden'\n      },\n      async onEnter (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        ;(el as HTMLElement).style.visibility = ''\n\n        const dimensions = getDimensions(props.target!, el as HTMLElement)\n        const { x, y, sx, sy, speed } = dimensions\n        saved.set(el, dimensions)\n\n        const animation = animate(el, [\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n          {},\n        ], {\n          duration: 225 * speed,\n          easing: deceleratedEasing,\n        })\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            { opacity: 0 },\n            { opacity: 0, offset: 0.33 },\n            {},\n          ], {\n            duration: 225 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n        animation.finished.then(() => done())\n      },\n      onAfterEnter (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n      onBeforeLeave (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n      },\n      async onLeave (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n\n        let dimensions\n        if (\n          !saved.has(el) ||\n          Array.isArray(props.target) ||\n          props.target!.offsetParent ||\n          props.target!.getClientRects().length\n        ) {\n          dimensions = getDimensions(props.target!, el as HTMLElement)\n        } else {\n          dimensions = saved.get(el)!\n        }\n        const { x, y, sx, sy, speed } = dimensions\n\n        const animation = animate(el, [\n          {},\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n        ], {\n          duration: 125 * speed,\n          easing: acceleratedEasing,\n        })\n        animation.finished.then(() => done())\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            {},\n            { opacity: 0, offset: 0.2 },\n            { opacity: 0 },\n          ], {\n            duration: 125 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n      },\n      onAfterLeave (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n    }\n\n    return () => {\n      return props.target\n        ? (\n          <Transition\n            name=\"dialog-transition\"\n            { ...functions }\n            css={ false }\n            v-slots={ slots }\n          />\n        )\n        : <Transition name=\"dialog-transition\" v-slots={ slots } />\n    }\n  },\n})\n\n/** Animatable children (card, sheet, list) */\nfunction getChildren (el: Element) {\n  const els = el.querySelector(':scope > .v-card, :scope > .v-sheet, :scope > .v-list')?.children\n  return els && [...els]\n}\n\ntype Dimensions = {\n  x: number\n  y: number\n  sx: number\n  sy: number\n  speed: number\n}\n\nfunction getDimensions (target: HTMLElement | [x: number, y: number], el: HTMLElement): Dimensions {\n  const targetBox = getTargetBox(target)\n  const elBox = nullifyTransforms(el)\n  const [originX, originY] = getComputedStyle(el).transformOrigin.split(' ').map(v => parseFloat(v))\n\n  const [anchorSide, anchorOffset] = getComputedStyle(el).getPropertyValue('--v-overlay-anchor-origin').split(' ')\n\n  let offsetX = targetBox.left + targetBox.width / 2\n  if (anchorSide === 'left' || anchorOffset === 'left') {\n    offsetX -= targetBox.width / 2\n  } else if (anchorSide === 'right' || anchorOffset === 'right') {\n    offsetX += targetBox.width / 2\n  }\n\n  let offsetY = targetBox.top + targetBox.height / 2\n  if (anchorSide === 'top' || anchorOffset === 'top') {\n    offsetY -= targetBox.height / 2\n  } else if (anchorSide === 'bottom' || anchorOffset === 'bottom') {\n    offsetY += targetBox.height / 2\n  }\n\n  const tsx = targetBox.width / elBox.width\n  const tsy = targetBox.height / elBox.height\n  const maxs = Math.max(1, tsx, tsy)\n  const sx = tsx / maxs || 0\n  const sy = tsy / maxs || 0\n\n  // Animate elements larger than 12% of the screen area up to 1.5x slower\n  const asa = (elBox.width * elBox.height) / (window.innerWidth * window.innerHeight)\n  const speed = asa > 0.12\n    ? Math.min(1.5, (asa - 0.12) * 10 + 1)\n    : 1\n\n  return {\n    x: offsetX - (originX + elBox.left),\n    y: offsetY - (originY + elBox.top),\n    sx,\n    sy,\n    speed,\n  }\n}\n\nexport type VDialogTransition = InstanceType<typeof VDialogTransition>\n","// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { watch } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { GenericProps, TemplateRef } from '@/util'\n\nexport const makeVVirtualScrollItemProps = propsFactory({\n  renderless: Boolean,\n\n  ...makeComponentProps(),\n}, 'VVirtualScrollItem')\n\nexport const VVirtualScrollItem = genericComponent<new <Renderless extends boolean = false>(\n  props: {\n    renderless?: Renderless\n  },\n  slots: {\n    default: Renderless extends true ? {\n      itemRef: TemplateRef\n    } : never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScrollItem',\n\n  inheritAttrs: false,\n\n  props: makeVVirtualScrollItemProps(),\n\n  emits: {\n    'update:height': (height: number) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { resizeRef, contentRect } = useResizeObserver(undefined, 'border')\n\n    watch(() => contentRect.value?.height, height => {\n      if (height != null) emit('update:height', height)\n    })\n\n    useRender(() => props.renderless ? (\n      <>\n        { slots.default?.({ itemRef: resizeRef }) }\n      </>\n    ) : (\n      <div\n        ref={ resizeRef }\n        class={[\n          'v-virtual-scroll__item',\n          props.class,\n        ]}\n        style={ props.style }\n        { ...attrs }\n      >\n        { (slots.default as any)?.() }\n      </div>\n    ))\n  },\n})\n","// Composables\nimport { useDisplay } from '@/composables/display'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { computed, nextTick, onScopeDispose, ref, shallowRef, watch, watchEffect } from 'vue'\nimport { clamp, debounce, getPropertyFromItem, IN_BROWSER, propsFactory } from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { SelectItemKey } from '@/util'\n\nconst UP = -1\nconst DOWN = 1\n\n/** Determines how large each batch of items should be */\nconst BUFFER_PX = 100\n\ntype VirtualProps = {\n  itemHeight: number | string | null | undefined\n  itemKey: SelectItemKey\n  height: number | string | undefined\n}\n\nexport const makeVirtualProps = propsFactory({\n  itemHeight: {\n    type: [Number, String],\n    default: null,\n  },\n  itemKey: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: null,\n  },\n  height: [Number, String],\n}, 'virtual')\n\nexport function useVirtual <T> (props: VirtualProps, items: Ref<readonly T[]>) {\n  const display = useDisplay()\n\n  const itemHeight = shallowRef(0)\n  watchEffect(() => {\n    itemHeight.value = parseFloat(props.itemHeight || 0)\n  })\n\n  const first = shallowRef(0)\n  const last = shallowRef(Math.ceil(\n    // Assume 16px items filling the entire screen height if\n    // not provided. This is probably incorrect but it minimises\n    // the chance of ending up with empty space at the bottom.\n    // The default value is set here to avoid poisoning getSize()\n    (parseInt(props.height!) || display.height.value) / (itemHeight.value || 16)\n  ) || 1)\n  const paddingTop = shallowRef(0)\n  const paddingBottom = shallowRef(0)\n\n  /** The scrollable element */\n  const containerRef = ref<HTMLElement>()\n  /** An element marking the top of the scrollable area,\n   * used to add an offset if there's padding or other elements above the virtual list */\n  const markerRef = ref<HTMLElement>()\n  /** markerRef's offsetTop, lazily evaluated */\n  let markerOffset = 0\n\n  const { resizeRef, contentRect } = useResizeObserver()\n  watchEffect(() => {\n    resizeRef.value = containerRef.value\n  })\n  const viewportHeight = computed(() => {\n    return containerRef.value === document.documentElement\n      ? display.height.value\n      : contentRect.value?.height || parseInt(props.height!) || 0\n  })\n  /** All static elements have been rendered and we have an assumed item height */\n  const hasInitialRender = computed(() => {\n    return !!(containerRef.value && markerRef.value && viewportHeight.value && itemHeight.value)\n  })\n\n  let sizes = Array.from<number | null>({ length: items.value.length })\n  let offsets = Array.from<number>({ length: items.value.length })\n  const updateTime = shallowRef(0)\n  let targetScrollIndex = -1\n\n  function getSize (index: number) {\n    return sizes[index] || itemHeight.value\n  }\n\n  const updateOffsets = debounce(() => {\n    const start = performance.now()\n    offsets[0] = 0\n    const length = items.value.length\n    for (let i = 1; i <= length - 1; i++) {\n      offsets[i] = (offsets[i - 1] || 0) + getSize(i - 1)\n    }\n    updateTime.value = Math.max(updateTime.value, performance.now() - start)\n  }, updateTime)\n\n  const unwatch = watch(hasInitialRender, v => {\n    if (!v) return\n    // First render is complete, update offsets and visible\n    // items in case our assumed item height was incorrect\n\n    unwatch()\n    markerOffset = markerRef.value!.offsetTop\n    updateOffsets.immediate()\n    calculateVisibleItems()\n\n    if (!~targetScrollIndex) return\n\n    nextTick(() => {\n      IN_BROWSER && window.requestAnimationFrame(() => {\n        scrollToIndex(targetScrollIndex)\n        targetScrollIndex = -1\n      })\n    })\n  })\n\n  onScopeDispose(() => {\n    updateOffsets.clear()\n  })\n\n  function handleItemResize (index: number, height: number) {\n    const prevHeight = sizes[index]\n    const prevMinHeight = itemHeight.value\n\n    itemHeight.value = prevMinHeight ? Math.min(itemHeight.value, height) : height\n\n    if (prevHeight !== height || prevMinHeight !== itemHeight.value) {\n      sizes[index] = height\n      updateOffsets()\n    }\n  }\n\n  function calculateOffset (index: number) {\n    index = clamp(index, 0, items.value.length - 1)\n    const whole = Math.floor(index)\n    const fraction = index % 1\n    const next = whole + 1\n    const wholeOffset = offsets[whole] || 0\n    const nextOffset = offsets[next] || wholeOffset\n    return wholeOffset + (nextOffset - wholeOffset) * fraction\n  }\n\n  function calculateIndex (scrollTop: number) {\n    return binaryClosest(offsets, scrollTop)\n  }\n\n  let lastScrollTop = 0\n  let scrollVelocity = 0\n  let lastScrollTime = 0\n\n  watch(viewportHeight, (val, oldVal) => {\n    if (oldVal) {\n      calculateVisibleItems()\n      if (val < oldVal) {\n        requestAnimationFrame(() => {\n          scrollVelocity = 0\n          calculateVisibleItems()\n        })\n      }\n    }\n  })\n\n  let scrollTimeout = -1\n  function handleScroll () {\n    if (!containerRef.value || !markerRef.value) return\n\n    const scrollTop = containerRef.value.scrollTop\n    const scrollTime = performance.now()\n    const scrollDeltaT = scrollTime - lastScrollTime\n\n    if (scrollDeltaT > 500) {\n      scrollVelocity = Math.sign(scrollTop - lastScrollTop)\n\n      // Not super important, only update at the\n      // start of a scroll sequence to avoid reflows\n      markerOffset = markerRef.value.offsetTop\n    } else {\n      scrollVelocity = scrollTop - lastScrollTop\n    }\n\n    lastScrollTop = scrollTop\n    lastScrollTime = scrollTime\n\n    window.clearTimeout(scrollTimeout)\n    scrollTimeout = window.setTimeout(handleScrollend, 500)\n\n    calculateVisibleItems()\n  }\n  function handleScrollend () {\n    if (!containerRef.value || !markerRef.value) return\n\n    scrollVelocity = 0\n    lastScrollTime = 0\n\n    window.clearTimeout(scrollTimeout)\n    calculateVisibleItems()\n  }\n\n  let raf = -1\n  function calculateVisibleItems () {\n    cancelAnimationFrame(raf)\n    raf = requestAnimationFrame(_calculateVisibleItems)\n  }\n  function _calculateVisibleItems () {\n    if (!containerRef.value || !viewportHeight.value || !itemHeight.value) return\n    const scrollTop = lastScrollTop - markerOffset\n    const direction = Math.sign(scrollVelocity)\n\n    const startPx = Math.max(0, scrollTop - BUFFER_PX)\n    const start = clamp(calculateIndex(startPx), 0, items.value.length)\n\n    const endPx = scrollTop + viewportHeight.value + BUFFER_PX\n    const end = clamp(calculateIndex(endPx) + 1, start + 1, items.value.length)\n\n    if (\n      // Only update the side we're scrolling towards,\n      // the other side will be updated incidentally\n      (direction !== UP || start < first.value) &&\n      (direction !== DOWN || end > last.value)\n    ) {\n      const topOverflow = calculateOffset(first.value) - calculateOffset(start)\n      const bottomOverflow = calculateOffset(end) - calculateOffset(last.value)\n      const bufferOverflow = Math.max(topOverflow, bottomOverflow)\n\n      if (bufferOverflow > BUFFER_PX) {\n        first.value = start\n        last.value = end\n      } else {\n        // Only update the side that's reached its limit if there's still buffer left\n        if (start <= 0) first.value = start\n        if (end >= items.value.length) last.value = end\n      }\n    }\n\n    paddingTop.value = calculateOffset(first.value)\n    paddingBottom.value = calculateOffset(items.value.length) - calculateOffset(last.value)\n  }\n\n  function scrollToIndex (index: number) {\n    const offset = calculateOffset(index)\n    if (!containerRef.value || (index && !offset)) {\n      targetScrollIndex = index\n    } else {\n      containerRef.value.scrollTop = offset\n    }\n  }\n\n  const computedItems = computed(() => {\n    return items.value.slice(first.value, last.value).map((item, index) => {\n      const _index = index + first.value\n      return {\n        raw: item,\n        index: _index,\n        key: getPropertyFromItem(item, props.itemKey, _index),\n      }\n    })\n  })\n\n  watch(items, () => {\n    sizes = Array.from({ length: items.value.length })\n    offsets = Array.from({ length: items.value.length })\n    updateOffsets.immediate()\n    calculateVisibleItems()\n  }, { deep: 1 })\n\n  return {\n    calculateVisibleItems,\n    containerRef,\n    markerRef,\n    computedItems,\n    paddingTop,\n    paddingBottom,\n    scrollToIndex,\n    handleScroll,\n    handleScrollend,\n    handleItemResize,\n  }\n}\n\n// https://gist.github.com/robertleeplummerjr/1cc657191d34ecd0a324\nfunction binaryClosest (arr: ArrayLike<number>, val: number) {\n  let high = arr.length - 1\n  let low = 0\n  let mid = 0\n  let item = null\n  let target = -1\n\n  if (arr[high]! < val) {\n    return high\n  }\n\n  while (low <= high) {\n    mid = (low + high) >> 1\n    item = arr[mid]!\n\n    if (item > val) {\n      high = mid - 1\n    } else if (item < val) {\n      target = mid\n      low = mid + 1\n    } else if (item === val) {\n      return mid\n    } else {\n      return low\n    }\n  }\n\n  return target\n}\n","// Styles\nimport './VVirtualScroll.sass'\n\n// Components\nimport { VVirtualScrollItem } from './VVirtualScrollItem'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useToggleScope } from '@/composables/toggleScope'\nimport { makeVirtualProps, useVirtual } from '@/composables/virtual'\n\n// Utilities\nimport { onMounted, onScopeDispose, toRef } from 'vue'\nimport {\n  convertToUnit,\n  genericComponent,\n  getCurrentInstance,\n  getScrollParent,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport interface VVirtualScrollSlot<T> {\n  item: T\n  index: number\n}\n\nexport const makeVVirtualScrollProps = propsFactory({\n  items: {\n    type: Array as PropType<readonly unknown[]>,\n    default: () => ([]),\n  },\n  renderless: Boolean,\n\n  ...makeVirtualProps(),\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n}, 'VVirtualScroll')\n\nexport const VVirtualScroll = genericComponent<new <T, Renderless extends boolean = false>(\n  props: {\n    items?: readonly T[]\n    renderless?: Renderless\n  },\n  slots: {\n    default: VVirtualScrollSlot<T> & (Renderless extends true ? {\n      itemRef: Ref<HTMLElement | undefined>\n    } : {})\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScroll',\n\n  props: makeVVirtualScrollProps(),\n\n  setup (props, { slots }) {\n    const vm = getCurrentInstance('VVirtualScroll')\n    const { dimensionStyles } = useDimension(props)\n    const {\n      calculateVisibleItems,\n      containerRef,\n      markerRef,\n      handleScroll,\n      handleScrollend,\n      handleItemResize,\n      scrollToIndex,\n      paddingTop,\n      paddingBottom,\n      computedItems,\n    } = useVirtual(props, toRef(() => props.items))\n\n    useToggleScope(() => props.renderless, () => {\n      function handleListeners (add = false) {\n        const method = add ? 'addEventListener' : 'removeEventListener'\n\n        if (containerRef.value === document.documentElement) {\n          document[method]('scroll', handleScroll, { passive: true })\n          document[method]('scrollend', handleScrollend)\n        } else {\n          containerRef.value?.[method]('scroll', handleScroll, { passive: true })\n          containerRef.value?.[method]('scrollend', handleScrollend)\n        }\n      }\n\n      onMounted(() => {\n        containerRef.value = getScrollParent(vm.vnode.el as HTMLElement, true)\n        handleListeners(true)\n      })\n      onScopeDispose(handleListeners)\n    })\n\n    useRender(() => {\n      const children = computedItems.value.map(item => (\n        <VVirtualScrollItem\n          key={ item.key }\n          renderless={ props.renderless }\n          onUpdate:height={ height => handleItemResize(item.index, height) }\n        >\n          { slotProps => slots.default?.({ item: item.raw, index: item.index, ...slotProps }) }\n        </VVirtualScrollItem>\n      ))\n\n      return props.renderless ? (\n        <>\n          <div ref={ markerRef } class=\"v-virtual-scroll__spacer\" style={{ paddingTop: convertToUnit(paddingTop.value) }} />\n          { children }\n          <div class=\"v-virtual-scroll__spacer\" style={{ paddingBottom: convertToUnit(paddingBottom.value) }} />\n        </>\n      ) : (\n        <div\n          ref={ containerRef }\n          class={[\n            'v-virtual-scroll',\n            props.class,\n          ]}\n          onScrollPassive={ handleScroll }\n          onScrollend={ handleScrollend }\n          style={[\n            dimensionStyles.value,\n            props.style,\n          ]}\n        >\n          <div\n            ref={ markerRef }\n            class=\"v-virtual-scroll__container\"\n            style={{\n              paddingTop: convertToUnit(paddingTop.value),\n              paddingBottom: convertToUnit(paddingBottom.value),\n            }}\n          >\n            { children }\n          </div>\n        </div>\n      )\n    })\n\n    return {\n      calculateVisibleItems,\n      scrollToIndex,\n    }\n  },\n})\n\nexport type VVirtualScroll = InstanceType<typeof VVirtualScroll>\n","// Utilities\nimport { shallowRef, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { VList } from '@/components/VList'\nimport type { VTextField } from '@/components/VTextField'\n\nexport function useScrolling (listRef: Ref<VList | undefined>, textFieldRef: Ref<VTextField | undefined>) {\n  const isScrolling = shallowRef(false)\n  let scrollTimeout: number\n  function onListScroll (e: Event) {\n    cancelAnimationFrame(scrollTimeout)\n    isScrolling.value = true\n    scrollTimeout = requestAnimationFrame(() => {\n      scrollTimeout = requestAnimationFrame(() => {\n        isScrolling.value = false\n      })\n    })\n  }\n  async function finishScrolling () {\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise<void>(resolve => {\n      if (isScrolling.value) {\n        const stop = watch(isScrolling, () => {\n          stop()\n          resolve()\n        })\n      } else resolve()\n    })\n  }\n  async function onListKeydown (e: KeyboardEvent) {\n    if (e.key === 'Tab') {\n      textFieldRef.value?.focus()\n    }\n\n    if (!['PageDown', 'PageUp', 'Home', 'End'].includes(e.key)) return\n    const el: HTMLElement = listRef.value?.$el\n    if (!el) return\n\n    if (e.key === 'Home' || e.key === 'End') {\n      el.scrollTo({\n        top: e.key === 'Home' ? 0 : el.scrollHeight,\n        behavior: 'smooth',\n      })\n    }\n\n    await finishScrolling()\n\n    const children = el.querySelectorAll(':scope > :not(.v-virtual-scroll__spacer)')\n\n    if (e.key === 'PageDown' || e.key === 'Home') {\n      const top = el.getBoundingClientRect().top\n      for (const child of children) {\n        if (child.getBoundingClientRect().top >= top) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    } else {\n      const bottom = el.getBoundingClientRect().bottom\n      for (const child of [...children].reverse()) {\n        if (child.getBoundingClientRect().bottom <= bottom) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    }\n  }\n\n  return {\n    onScrollPassive: onListScroll,\n    onKeydown: onListKeydown,\n  } as Record<string, Function> // typescript doesn't know about vue's event merging\n}\n","// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VDivider } from '@/components/VDivider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem, VListSubheader } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from './useScrolling'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps, useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, toRef, watch } from 'vue'\nimport {\n  camelizeProps,\n  checkPrintable,\n  deepEqual,\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { Component, PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  openText: {\n    type: String,\n    default: '$vuetify.open',\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  listProps: {\n    type: Object as PropType<VList['$props']>,\n  },\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown',\n  },\n  menuProps: {\n    type: Object as PropType<VMenu['$props']>,\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n  itemColor: String,\n  noAutoScroll: Boolean,\n\n  ...makeItemsProps({ itemChildren: false }),\n}, 'Select')\n\nexport const makeVSelectProps = propsFactory({\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: { component: VDialogTransition as Component } }),\n}, 'VSelect')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VSelect = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    subheader: { props: Record<string, unknown>, index: number }\n    divider: { props: Record<string, unknown>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelect',\n\n  props: makeVSelectProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (ue: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref<VTextField>()\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const { items, transformIn, transformOut } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm(props)\n    const selectedValues = computed(() => model.value.map(selection => selection.value))\n    const isFocused = shallowRef(false)\n\n    let keyboardLookupPrefix = ''\n    let keyboardLookupIndex = -1\n    let keyboardLookupLastTime: number\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !model.value.some(s => (props.valueComparator || deepEqual)(s, item)))\n      }\n      return items.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !displayItems.value.length) ||\n      form.isReadonly.value || form.isDisabled.value\n    ))\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.ΨopenChildren.size) return\n        if (v && menuDisabled.value) return\n        _menu.value = v\n      },\n    })\n\n    const label = toRef(() => menu.value ? props.closeText : props.openText)\n\n    const computedMenuProps = computed(() => {\n      return {\n        ...props.menuProps,\n        activatorProps: {\n          ...(props.menuProps?.activatorProps || {}),\n          'aria-haspopup': 'listbox', // Set aria-haspopup to 'listbox'\n        },\n      }\n    })\n\n    const listRef = ref<VList>()\n    const listEvents = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = !menu.value\n    }\n    function onListKeydown (e: KeyboardEvent) {\n      if (checkPrintable(e)) {\n        onKeydown(e)\n      }\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (!e.key || form.isReadonly.value) return\n\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (e.key === 'Home') {\n        listRef.value?.focus('first')\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last')\n      }\n\n      // html select hotkeys\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n\n      if (!checkPrintable(e)) return\n\n      const now = performance.now()\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = ''\n        keyboardLookupIndex = -1\n      }\n      keyboardLookupPrefix += e.key.toLowerCase()\n      keyboardLookupLastTime = now\n\n      const items = displayItems.value\n      function findItem () {\n        let result = findItemBase()\n        if (result) return result\n\n        if (keyboardLookupPrefix.at(-1) === keyboardLookupPrefix.at(-2)) {\n          // No matches but we have a repeated letter, try the next item with that prefix\n          keyboardLookupPrefix = keyboardLookupPrefix.slice(0, -1)\n          result = findItemBase()\n          if (result) return result\n        }\n\n        // Still nothing, wrap around to the top\n        keyboardLookupIndex = -1\n        result = findItemBase()\n        if (result) return result\n\n        // Still nothing, try just the new letter\n        keyboardLookupPrefix = e.key.toLowerCase()\n        return findItemBase()\n      }\n      function findItemBase () {\n        for (let i = keyboardLookupIndex + 1; i < items.length; i++) {\n          const _item = items[i]\n          if (_item.title.toLowerCase().startsWith(keyboardLookupPrefix)) {\n            return [_item, i] as const\n          }\n        }\n        return undefined\n      }\n\n      const result = findItem()\n      if (!result) return\n\n      const [item, index] = result\n      keyboardLookupIndex = index\n      listRef.value?.focus(index)\n      if (!props.multiple) {\n        model.value = [item]\n      }\n    }\n\n    /** @param set - null means toggle */\n    function select (item: ListItem, set: boolean | null = true) {\n      if (item.props.disabled) return\n\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => (props.valueComparator || deepEqual)(selection.value, item.value))\n        const add = set == null ? !~index : set\n\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        } else if (add) {\n          model.value = [...model.value, item]\n        }\n      } else {\n        const add = set !== false\n        model.value = add ? [item] : []\n\n        nextTick(() => {\n          menu.value = false\n        })\n      }\n    }\n    function onBlur (e: FocusEvent) {\n      if (!listRef.value?.$el.contains(e.relatedTarget as HTMLElement)) {\n        menu.value = false\n      }\n    }\n    function onAfterEnter () {\n      if (props.eager) {\n        vVirtualScrollRef.value?.calculateVisibleItems()\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n    function onModelUpdate (v: any) {\n      if (v == null) model.value = []\n      else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === v)\n        if (item) {\n          select(item)\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = ''\n      }\n    }\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => (props.valueComparator || deepEqual)(s.value, item.value))\n        )\n        IN_BROWSER && !props.noAutoScroll && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      const placeholder = isDirty || (\n        !isFocused.value &&\n        props.label &&\n        !props.persistentPlaceholder\n      ) ? undefined : props.placeholder\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ model.value.map(v => v.props.value).join(', ') }\n          onUpdate:modelValue={ onModelUpdate }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-select--selected': model.value.length,\n              'v-select--selection-slot': !!slots.selection,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          inputmode=\"none\"\n          placeholder={ placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onBlur={ onBlur }\n          onKeydown={ onKeydown }\n          aria-label={ t(label.value) }\n          title={ t(label.value) }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-select__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterEnter={ onAfterEnter }\n                  onAfterLeave={ onAfterLeave }\n                  { ...computedMenuProps.value }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      tabindex=\"-1\"\n                      aria-live=\"polite\"\n                      aria-label={ `${props.label}-list` }\n                      color={ props.itemColor ?? props.color }\n                      { ...listEvents }\n                      { ...props.listProps }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem key=\"no-data\" title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value } itemKey=\"value\">\n                        { ({ item, index, itemRef }) => {\n                          const camelizedProps = camelizeProps(item.props)\n\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: item.value,\n                            onClick: () => select(item, null),\n                          })\n\n                          if (item.type === 'divider') {\n                            return slots.divider?.({ props: item.raw, index }) ?? (\n                              <VDivider { ...item.props } key={ `divider-${index}` } />\n                            )\n                          }\n\n                          if (item.type === 'subheader') {\n                            return slots.subheader?.({ props: item.raw, index }) ?? (\n                              <VListSubheader { ...item.props } key={ `subheader-${index}` } />\n                            )\n                          }\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps } role=\"option\">\n                              {{\n                                prepend: ({ isSelected }) => (\n                                  <>\n                                    { props.multiple && !props.hideSelected ? (\n                                      <VCheckboxBtn\n                                        key={ item.value }\n                                        modelValue={ isSelected }\n                                        ripple={ false }\n                                        tabindex=\"-1\"\n                                      />\n                                    ) : undefined }\n\n                                    { camelizedProps.prependAvatar && (\n                                      <VAvatar image={ camelizedProps.prependAvatar } />\n                                    )}\n\n                                    { camelizedProps.prependIcon && (\n                                      <VIcon icon={ camelizedProps.prependIcon } />\n                                    )}\n                                  </>\n                                ),\n                              }}\n                            </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item, false)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onKeydown (e: KeyboardEvent) {\n                      if (e.key !== 'Enter' && e.key !== ' ') return\n\n                      e.preventDefault()\n                      e.stopPropagation()\n\n                      onChipClose(e)\n                    },\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div key={ item.value } class=\"v-select__selection\">\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-select__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-select__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-select__menu-icon\"\n                    color={ vTextFieldRef.value?.fieldIconColor }\n                    icon={ props.menuIcon }\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      menu,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n","// Components\nimport { makeVSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { genericComponent, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\nimport type { GenericProps } from '@/util'\n\nexport const makeVCheckboxBtnProps = propsFactory({\n  indeterminate: Boolean,\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate',\n  },\n\n  ...makeVSelectionControlProps({\n    falseIcon: '$checkboxOff',\n    trueIcon: '$checkboxOn',\n  }),\n}, 'VCheckboxBtn')\n\nexport const VCheckboxBtn = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSelectionControlSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VCheckboxBtn',\n\n  props: makeVCheckboxBtnProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n    'update:indeterminate': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    const model = useProxiedModel(props, 'modelValue')\n\n    function onChange (v: any) {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n\n    const falseIcon = toRef(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.falseIcon\n    })\n\n    const trueIcon = toRef(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.trueIcon\n    })\n\n    useRender(() => {\n      const controlProps = omit(VSelectionControl.filterProps(props), ['modelValue'])\n      return (\n        <VSelectionControl\n          { ...controlProps }\n          v-model={ model.value }\n          class={[\n            'v-checkbox-btn',\n            props.class,\n          ]}\n          style={ props.style }\n          type=\"checkbox\"\n          onUpdate:modelValue={ onChange }\n          falseIcon={ falseIcon.value }\n          trueIcon={ trueIcon.value }\n          aria-checked={ indeterminate.value ? 'mixed' : undefined }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckboxBtn = InstanceType<typeof VCheckboxBtn>\n","// Styles\nimport './VSelectionControlGroup.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeThemeProps } from '@/composables/theme'\n\n// Utilities\nimport { onScopeDispose, provide, toRef, useId } from 'vue'\nimport { deepEqual, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\nimport type { GenericProps } from '@/util'\n\nexport interface VSelectionGroupContext {\n  modelValue: Ref<any>\n  forceUpdate: () => void\n  onForceUpdate: (fn: () => void) => void\n}\n\nexport const VSelectionControlGroupSymbol: InjectionKey<VSelectionGroupContext> = Symbol.for('vuetify:selection-control-group')\n\nexport const makeSelectionControlGroupProps = propsFactory({\n  color: String,\n  disabled: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  defaultsTarget: String,\n  error: Boolean,\n  id: String,\n  inline: Boolean,\n  falseIcon: IconValue,\n  trueIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  multiple: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  name: String,\n  readonly: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  modelValue: null,\n  type: String,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeThemeProps(),\n}, 'SelectionControlGroup')\n\nexport const makeVSelectionControlGroupProps = propsFactory({\n  ...makeSelectionControlGroupProps({\n    defaultsTarget: 'VSelectionControl',\n  }),\n}, 'VSelectionControlGroup')\n\nexport const VSelectionControlGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: { default: never },\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelectionControlGroup',\n\n  props: makeVSelectionControlGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const modelValue = useProxiedModel(props, 'modelValue')\n    const uid = useId()\n    const id = toRef(() => props.id || `v-selection-control-group-${uid}`)\n    const name = toRef(() => props.name || id.value)\n\n    const updateHandlers = new Set<() => void>()\n    provide(VSelectionControlGroupSymbol, {\n      modelValue,\n      forceUpdate: () => {\n        updateHandlers.forEach(fn => fn())\n      },\n      onForceUpdate: cb => {\n        updateHandlers.add(cb)\n        onScopeDispose(() => {\n          updateHandlers.delete(cb)\n        })\n      },\n    })\n\n    provideDefaults({\n      [props.defaultsTarget]: {\n        color: toRef(() => props.color),\n        disabled: toRef(() => props.disabled),\n        density: toRef(() => props.density),\n        error: toRef(() => props.error),\n        inline: toRef(() => props.inline),\n        modelValue,\n        multiple: toRef(() => !!props.multiple || (props.multiple == null && Array.isArray(modelValue.value))),\n        name,\n        falseIcon: toRef(() => props.falseIcon),\n        trueIcon: toRef(() => props.trueIcon),\n        readonly: toRef(() => props.readonly),\n        ripple: toRef(() => props.ripple),\n        type: toRef(() => props.type),\n        valueComparator: toRef(() => props.valueComparator),\n      },\n    })\n\n    useRender(() => (\n      <div\n        class={[\n          'v-selection-control-group',\n          { 'v-selection-control-group--inline': props.inline },\n          props.class,\n        ]}\n        style={ props.style }\n        role={ props.type === 'radio' ? 'radiogroup' : undefined }\n      >\n        { slots.default?.() }\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VSelectionControlGroup = InstanceType<typeof VSelectionControlGroup>\n","// Styles\nimport './VSelectionControl.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VLabel } from '@/components/VLabel'\nimport { makeSelectionControlGroupProps, VSelectionControlGroupSymbol } from '@/components/VSelectionControlGroup/VSelectionControlGroup'\n\n// Composables\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { useDensity } from '@/composables/density'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport vRipple from '@/directives/ripple'\n\n// Utilities\nimport { computed, inject, nextTick, ref, shallowRef, toRef, useId } from 'vue'\nimport {\n  filterInputAttrs,\n  genericComponent,\n  matchesSelector,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { CSSProperties, ExtractPropTypes, Ref, VNode, WritableComputedRef } from 'vue'\nimport type { IconValue } from '@/composables/icons'\nimport type { EventProp, GenericProps } from '@/util'\n\nexport type SelectionControlSlot = {\n  model: WritableComputedRef<boolean>\n  textColorClasses: Ref<string[]>\n  textColorStyles: Ref<CSSProperties>\n  backgroundColorClasses: Ref<string[]>\n  backgroundColorStyles: Ref<CSSProperties>\n  inputNode: VNode\n  icon: IconValue | undefined\n  props: {\n    onBlur: (e: Event) => void\n    onFocus: (e: FocusEvent) => void\n    id: string\n  }\n}\n\nexport type VSelectionControlSlots = {\n  default: {\n    backgroundColorClasses: Ref<string[]>\n    backgroundColorStyles: Ref<CSSProperties>\n  }\n  label: { label: string | undefined, props: Record<string, unknown> }\n  input: SelectionControlSlot\n}\n\nexport const makeVSelectionControlProps = propsFactory({\n  label: String,\n  baseColor: String,\n  trueValue: null,\n  falseValue: null,\n  value: null,\n\n  ...makeComponentProps(),\n  ...makeSelectionControlGroupProps(),\n}, 'VSelectionControl')\n\nexport function useSelectionControl (\n  props: ExtractPropTypes<ReturnType<typeof makeVSelectionControlProps>> & {\n    'onUpdate:modelValue': EventProp | undefined\n  }\n) {\n  const group = inject(VSelectionControlGroupSymbol, undefined)\n  const { densityClasses } = useDensity(props)\n  const modelValue = useProxiedModel(props, 'modelValue')\n  const trueValue = computed(() => (\n    props.trueValue !== undefined ? props.trueValue\n    : props.value !== undefined ? props.value\n    : true\n  ))\n  const falseValue = computed(() => props.falseValue !== undefined ? props.falseValue : false)\n  const isMultiple = computed(() => (\n    !!props.multiple ||\n    (props.multiple == null && Array.isArray(modelValue.value))\n  ))\n  const model = computed({\n    get () {\n      const val = group ? group.modelValue.value : modelValue.value\n\n      return isMultiple.value\n        ? wrapInArray(val).some((v: any) => props.valueComparator(v, trueValue.value))\n        : props.valueComparator(val, trueValue.value)\n    },\n    set (val: boolean) {\n      if (props.readonly) return\n\n      const currentValue = val ? trueValue.value : falseValue.value\n\n      let newVal = currentValue\n\n      if (isMultiple.value) {\n        newVal = val\n          ? [...wrapInArray(modelValue.value), currentValue]\n          : wrapInArray(modelValue.value).filter((item: any) => !props.valueComparator(item, trueValue.value))\n      }\n\n      if (group) {\n        group.modelValue.value = newVal\n      } else {\n        modelValue.value = newVal\n      }\n    },\n  })\n  const { textColorClasses, textColorStyles } = useTextColor(() => {\n    if (props.error || props.disabled) return undefined\n\n    return model.value ? props.color : props.baseColor\n  })\n  const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(() => {\n    return (\n      model.value &&\n      !props.error &&\n      !props.disabled\n    ) ? props.color : props.baseColor\n  })\n  const icon = computed(() => model.value ? props.trueIcon : props.falseIcon)\n\n  return {\n    group,\n    densityClasses,\n    trueValue,\n    falseValue,\n    model,\n    textColorClasses,\n    textColorStyles,\n    backgroundColorClasses,\n    backgroundColorStyles,\n    icon,\n  }\n}\n\nexport const VSelectionControl = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSelectionControlSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelectionControl',\n\n  directives: { vRipple },\n\n  inheritAttrs: false,\n\n  props: makeVSelectionControlProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const {\n      group,\n      densityClasses,\n      icon,\n      model,\n      textColorClasses,\n      textColorStyles,\n      backgroundColorClasses,\n      backgroundColorStyles,\n      trueValue,\n    } = useSelectionControl(props)\n    const uid = useId()\n    const isFocused = shallowRef(false)\n    const isFocusVisible = shallowRef(false)\n    const input = ref<HTMLInputElement>()\n    const id = toRef(() => props.id || `input-${uid}`)\n    const isInteractive = toRef(() => !props.disabled && !props.readonly)\n\n    group?.onForceUpdate(() => {\n      if (input.value) {\n        input.value.checked = model.value\n      }\n    })\n\n    function onFocus (e: FocusEvent) {\n      if (!isInteractive.value) return\n\n      isFocused.value = true\n      if (matchesSelector(e.target as HTMLElement, ':focus-visible') !== false) {\n        isFocusVisible.value = true\n      }\n    }\n\n    function onBlur () {\n      isFocused.value = false\n      isFocusVisible.value = false\n    }\n\n    function onClickLabel (e: Event) {\n      e.stopPropagation()\n    }\n\n    function onInput (e: Event) {\n      if (!isInteractive.value) {\n        if (input.value) {\n          // model value is not updated when input is not interactive\n          // but the internal checked state of the input is still updated,\n          // so here it's value is restored\n          input.value.checked = model.value\n        }\n\n        return\n      }\n\n      if (props.readonly && group) {\n        nextTick(() => group.forceUpdate())\n      }\n      model.value = (e.target as HTMLInputElement).checked\n    }\n\n    useRender(() => {\n      const label = slots.label\n        ? slots.label({\n          label: props.label,\n          props: { for: id.value },\n        })\n        : props.label\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n\n      const inputNode = (\n        <input\n          ref={ input }\n          checked={ model.value }\n          disabled={ !!props.disabled }\n          id={ id.value }\n          onBlur={ onBlur }\n          onFocus={ onFocus }\n          onInput={ onInput }\n          aria-disabled={ !!props.disabled }\n          aria-label={ props.label }\n          type={ props.type }\n          value={ trueValue.value }\n          name={ props.name }\n          aria-checked={ props.type === 'checkbox' ? model.value : undefined }\n          { ...inputAttrs }\n        />\n      )\n\n      return (\n        <div\n          class={[\n            'v-selection-control',\n            {\n              'v-selection-control--dirty': model.value,\n              'v-selection-control--disabled': props.disabled,\n              'v-selection-control--error': props.error,\n              'v-selection-control--focused': isFocused.value,\n              'v-selection-control--focus-visible': isFocusVisible.value,\n              'v-selection-control--inline': props.inline,\n            },\n            densityClasses.value,\n            props.class,\n          ]}\n          { ...rootAttrs }\n          style={ props.style }\n        >\n          <div\n            class={[\n              'v-selection-control__wrapper',\n              textColorClasses.value,\n            ]}\n            style={ textColorStyles.value }\n          >\n            { slots.default?.({\n              backgroundColorClasses,\n              backgroundColorStyles,\n            })}\n\n            <div\n              class={[\n                'v-selection-control__input',\n              ]}\n              v-ripple={ props.ripple && [\n                !props.disabled && !props.readonly,\n                null,\n                ['center', 'circle'],\n              ]}\n            >\n              { slots.input?.({\n                model,\n                textColorClasses,\n                textColorStyles,\n                backgroundColorClasses,\n                backgroundColorStyles,\n                inputNode,\n                icon: icon.value,\n                props: {\n                  onFocus,\n                  onBlur,\n                  id: id.value,\n                },\n              } satisfies SelectionControlSlot) ?? (\n                <>\n                  { icon.value && <VIcon key=\"icon\" icon={ icon.value } /> }\n\n                  { inputNode }\n                </>\n              )}\n            </div>\n          </div>\n\n          { label && (\n            <VLabel for={ id.value } onClick={ onClickLabel }>\n              { label }\n            </VLabel>\n          )}\n        </div>\n      )\n    })\n\n    return {\n      isFocused,\n      input,\n    }\n  },\n})\n\nexport type VSelectionControl = InstanceType<typeof VSelectionControl>\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\nimport { makeVOverlayProps } from '@/components/VOverlay/VOverlay'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useRtl } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport {\n  computed,\n  inject,\n  mergeProps,\n  nextTick,\n  onBeforeUnmount,\n  onDeactivated,\n  provide,\n  ref,\n  shallowRef, toRef,\n  useId,\n  watch,\n} from 'vue'\nimport { VMenuSymbol } from './shared'\nimport {\n  focusableChildren,\n  focusChild,\n  genericComponent,\n  getNextElement,\n  IN_BROWSER,\n  isClickInsideElement,\n  omit,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const makeVMenuProps = propsFactory({\n  // TODO\n  // disableKeys: Boolean,\n  id: String,\n  submenu: Boolean,\n  disableInitialFocus: Boolean,\n\n  ...omit(makeVOverlayProps({\n    closeDelay: 250,\n    closeOnContentClick: true,\n    locationStrategy: 'connected' as const,\n    location: undefined,\n    openDelay: 300,\n    scrim: false,\n    scrollStrategy: 'reposition' as const,\n    transition: { component: VDialogTransition },\n  }), ['absolute']),\n}, 'VMenu')\n\nexport const VMenu = genericComponent<OverlaySlots>()({\n  name: 'VMenu',\n\n  props: makeVMenuProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n    const { isRtl } = useRtl()\n\n    const uid = useId()\n    const id = toRef(() => props.id || `v-menu-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const parent = inject(VMenuSymbol, null)\n    const openChildren = shallowRef(new Set<string>())\n    provide(VMenuSymbol, {\n      register () {\n        openChildren.value.add(uid)\n      },\n      unregister () {\n        openChildren.value.delete(uid)\n      },\n      closeParents (e) {\n        setTimeout(() => {\n          if (!openChildren.value.size &&\n            !props.persistent &&\n            (e == null || (overlay.value?.contentEl && !isClickInsideElement(e, overlay.value.contentEl)))\n          ) {\n            isActive.value = false\n            parent?.closeParents()\n          }\n        }, 40)\n      },\n    })\n\n    onBeforeUnmount(() => {\n      parent?.unregister()\n      document.removeEventListener('focusin', onFocusIn)\n    })\n    onDeactivated(() => isActive.value = false)\n\n    async function onFocusIn (e: FocusEvent) {\n      const before = e.relatedTarget as HTMLElement | null\n      const after = e.target as HTMLElement | null\n\n      await nextTick()\n\n      if (\n        isActive.value &&\n        before !== after &&\n        overlay.value?.contentEl &&\n        // We're the topmost menu\n        overlay.value?.globalTop &&\n        // It isn't the document or the menu body\n        ![document, overlay.value.contentEl].includes(after!) &&\n        // It isn't inside the menu body\n        !overlay.value.contentEl.contains(after)\n      ) {\n        const focusable = focusableChildren(overlay.value.contentEl)\n        focusable[0]?.focus()\n      }\n    }\n\n    watch(isActive, val => {\n      if (val) {\n        parent?.register()\n        if (IN_BROWSER && !props.disableInitialFocus) {\n          document.addEventListener('focusin', onFocusIn, { once: true })\n        }\n      } else {\n        parent?.unregister()\n        if (IN_BROWSER) {\n          document.removeEventListener('focusin', onFocusIn)\n        }\n      }\n    }, { immediate: true })\n\n    function onClickOutside (e: MouseEvent) {\n      parent?.closeParents(e)\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (props.disabled) return\n\n      if (e.key === 'Tab' || (e.key === 'Enter' && !props.closeOnContentClick)) {\n        if (\n          e.key === 'Enter' &&\n          ((e.target instanceof HTMLTextAreaElement) ||\n          (e.target instanceof HTMLInputElement && !!e.target.closest('form')))\n        ) return\n        if (e.key === 'Enter') e.preventDefault()\n\n        const nextElement = getNextElement(\n          focusableChildren(overlay.value?.contentEl as Element, false),\n          e.shiftKey ? 'prev' : 'next',\n          (el: HTMLElement) => el.tabIndex >= 0\n        )\n        if (!nextElement) {\n          isActive.value = false\n          overlay.value?.activatorEl?.focus()\n        }\n      } else if (props.submenu && e.key === (isRtl.value ? 'ArrowRight' : 'ArrowLeft')) {\n        isActive.value = false\n        overlay.value?.activatorEl?.focus()\n      }\n    }\n\n    function onActivatorKeydown (e: KeyboardEvent) {\n      if (props.disabled) return\n\n      const el = overlay.value?.contentEl\n      if (el && isActive.value) {\n        if (e.key === 'ArrowDown') {\n          e.preventDefault()\n          e.stopImmediatePropagation()\n          focusChild(el, 'next')\n        } else if (e.key === 'ArrowUp') {\n          e.preventDefault()\n          e.stopImmediatePropagation()\n          focusChild(el, 'prev')\n        } else if (props.submenu) {\n          if (e.key === (isRtl.value ? 'ArrowRight' : 'ArrowLeft')) {\n            isActive.value = false\n          } else if (e.key === (isRtl.value ? 'ArrowLeft' : 'ArrowRight')) {\n            e.preventDefault()\n            focusChild(el, 'first')\n          }\n        }\n      } else if (\n        props.submenu\n          ? e.key === (isRtl.value ? 'ArrowLeft' : 'ArrowRight')\n          : ['ArrowDown', 'ArrowUp'].includes(e.key)\n      ) {\n        isActive.value = true\n        e.preventDefault()\n        setTimeout(() => setTimeout(() => onActivatorKeydown(e)))\n      }\n    }\n\n    const activatorProps = computed(() =>\n      mergeProps({\n        'aria-haspopup': 'menu',\n        'aria-expanded': String(isActive.value),\n        'aria-controls': id.value,\n        onKeydown: onActivatorKeydown,\n      }, props.activatorProps)\n    )\n\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          id={ id.value }\n          class={[\n            'v-menu',\n            props.class,\n          ]}\n          style={ props.style }\n          { ...overlayProps }\n          v-model={ isActive.value }\n          absolute\n          activatorProps={ activatorProps.value }\n          location={ props.location ?? (props.submenu ? 'end' : 'bottom') }\n          onClick:outside={ onClickOutside }\n          onKeydown={ onKeydown }\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => (\n              <VDefaultsProvider root=\"VMenu\">\n                { slots.default?.(...args) }\n              </VDefaultsProvider>\n            ),\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({ id, ΨopenChildren: openChildren }, overlay)\n  },\n})\n\nexport type VMenu = InstanceType<typeof VMenu>\n"],"names":["makeVDialogTransitionProps","propsFactory","target","Object","Array","saved","WeakMap","VDialogTransition","genericComponent","name","props","setup","_ref","slots","functions","onBeforeEnter","el","style","pointerEvents","visibility","onEnter","done","Promise","resolve","requestAnimationFrame","dimensions","getDimensions","x","y","sx","sy","speed","set","animation","animate","transform","opacity","duration","easing","deceleratedEasing","getChildren","forEach","offset","standardEasing","finished","then","onAfterEnter","removeProperty","onBeforeLeave","onLeave","has","isArray","offsetParent","getClientRects","length","get","acceleratedEasing","onAfterLeave","_createVNode","Transition","_mergeProps","els","querySelector","children","targetBox","getTargetBox","elBox","nullifyTransforms","originX","originY","getComputedStyle","transformOrigin","split","map","v","parseFloat","anchorSide","anchorOffset","getPropertyValue","offsetX","left","width","offsetY","top","height","tsx","tsy","maxs","Math","max","asa","window","innerWidth","innerHeight","min","makeVVirtualScrollItemProps","renderless","Boolean","makeComponentProps","VVirtualScrollItem","inheritAttrs","emits","attrs","emit","resizeRef","contentRect","useResizeObserver","undefined","watch","value","useRender","_createElementVNode","_Fragment","default","itemRef","class","UP","DOWN","BUFFER_PX","makeVirtualProps","itemHeight","type","Number","String","itemKey","Function","useVirtual","items","display","useDisplay","shallowRef","watchEffect","first","last","ceil","parseInt","paddingTop","paddingBottom","containerRef","ref","markerRef","markerOffset","viewportHeight","computed","document","documentElement","hasInitialRender","sizes","from","offsets","updateTime","targetScrollIndex","getSize","index","updateOffsets","debounce","start","performance","now","i","unwatch","offsetTop","immediate","calculateVisibleItems","nextTick","IN_BROWSER","scrollToIndex","handleItemResize","prevHeight","prevMinHeight","calculateOffset","clamp","whole","floor","fraction","next","wholeOffset","nextOffset","calculateIndex","scrollTop","binaryClosest","onScopeDispose","clear","lastScrollTop","scrollVelocity","lastScrollTime","val","oldVal","scrollTimeout","handleScroll","scrollTime","scrollDeltaT","sign","clearTimeout","setTimeout","handleScrollend","raf","cancelAnimationFrame","_calculateVisibleItems","direction","startPx","endPx","end","topOverflow","bottomOverflow","bufferOverflow","computedItems","slice","item","_index","raw","key","getPropertyFromItem","deep","arr","high","low","mid","makeVVirtualScrollProps","makeDimensionProps","VVirtualScroll","vm","getCurrentInstance","dimensionStyles","useDimension","toRef","useToggleScope","handleListeners","add","arguments","method","passive","onMounted","getScrollParent","vnode","slotProps","convertToUnit","_normalizeClass","_normalizeStyle","useScrolling","listRef","textFieldRef","isScrolling","onListScroll","e","async","finishScrolling","stop","onListKeydown","focus","includes","$el","scrollTo","scrollHeight","behavior","querySelectorAll","getBoundingClientRect","child","bottom","reverse","onScrollPassive","onKeydown","makeSelectProps","chips","closableChips","closeText","openText","eager","hideNoData","hideSelected","listProps","menu","menuIcon","IconValue","menuProps","multiple","noDataText","openOnClear","itemColor","noAutoScroll","makeItemsProps","itemChildren","makeVSelectProps","omit","makeVTextFieldProps","modelValue","role","makeTransitionProps","transition","component","VSelect","focused","ue","t","useLocale","vTextFieldRef","vMenuRef","vVirtualScrollRef","transformIn","transformOut","useItems","model","useProxiedModel","wrapInArray","transformed","counterValue","form","useForm","selectedValues","selection","isFocused","keyboardLookupLastTime","keyboardLookupPrefix","keyboardLookupIndex","displayItems","filter","some","s","valueComparator","deepEqual","menuDisabled","isReadonly","isDisabled","_menu","ΨopenChildren","size","label","computedMenuProps","activatorProps","listEvents","onClear","onMousedownControl","checkPrintable","preventDefault","KEYBOARD_LOOKUP_THRESHOLD","toLowerCase","findItem","result","findItemBase","at","_item","title","startsWith","select","disabled","findIndex","splice","onBlur","contains","relatedTarget","onFocusin","onModelUpdate","matchesSelector","find","newVal","hasChips","chip","hasList","isDirty","textFieldProps","VTextField","filterProps","placeholder","persistentPlaceholder","join","$event","externalValue","VMenu","VList","color","VListItem","_ref2","camelizedProps","camelizeProps","itemProps","mergeProps","onClick","divider","VDivider","subheader","VListSubheader","prepend","_ref3","isSelected","VCheckboxBtn","prependAvatar","VAvatar","prependIcon","VIcon","onChipClose","stopPropagation","onMousedown","hasSlot","slotContent","ensureValidVNode","VDefaultsProvider","VChip","closable","text","_createTextVNode","_len","args","_key","fieldIconColor","forwardRefs","makeVCheckboxBtnProps","indeterminate","indeterminateIcon","makeVSelectionControlProps","falseIcon","trueIcon","onChange","controlProps","VSelectionControl","VSelectionControlGroupSymbol","Symbol","for","makeSelectionControlGroupProps","defaultsTarget","error","id","inline","ripple","readonly","makeDensityProps","makeThemeProps","makeVSelectionControlGroupProps","uid","useId","updateHandlers","Set","provide","forceUpdate","fn","onForceUpdate","cb","delete","provideDefaults","density","baseColor","trueValue","falseValue","useSelectionControl","group","inject","densityClasses","useDensity","isMultiple","currentValue","textColorClasses","textColorStyles","useTextColor","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","icon","directives","vRipple","isFocusVisible","input","isInteractive","onFocus","onClickLabel","onInput","checked","rootAttrs","inputAttrs","filterInputAttrs","inputNode","_withDirectives","VLabel","makeVMenuProps","submenu","disableInitialFocus","makeVOverlayProps","closeDelay","closeOnContentClick","locationStrategy","location","openDelay","scrim","scrollStrategy","isActive","scopeId","useScopeId","isRtl","useRtl","overlay","parent","VMenuSymbol","openChildren","onFocusIn","before","after","contentEl","globalTop","focusable","focusableChildren","onClickOutside","closeParents","HTMLTextAreaElement","HTMLInputElement","closest","nextElement","getNextElement","shiftKey","tabIndex","activatorEl","onActivatorKeydown","stopImmediatePropagation","focusChild","register","unregister","persistent","isClickInsideElement","onBeforeUnmount","removeEventListener","onDeactivated","addEventListener","once","overlayProps","VOverlay","activator"],"sourceRoot":""}