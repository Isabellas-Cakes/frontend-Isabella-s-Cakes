{"version":3,"file":"js/331.2b4f188a.js","mappings":"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","sources":["webpack://interfaz/../../../src/components/VBadge/VBadge.tsx","webpack://interfaz/./src/views/PedidosActivos.vue","webpack://interfaz/./src/views/PedidosActivos.vue?7238","webpack://interfaz/../../../src/components/VSnackbar/VSnackbar.tsx"],"sourcesContent":["// Styles\nimport './VBadge.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { IconValue } from '@/composables/icons'\nimport { useLocale } from '@/composables/locale'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport { genericComponent, pickWithRest, propsFactory, useRender } from '@/util'\n\nexport type VBadgeSlots = {\n  default: never\n  badge: never\n}\n\nexport const makeVBadgeProps = propsFactory({\n  bordered: Boolean,\n  color: String,\n  content: [Number, String],\n  dot: Boolean,\n  floating: Boolean,\n  icon: IconValue,\n  inline: Boolean,\n  label: {\n    type: String,\n    default: '$vuetify.badge',\n  },\n  max: [Number, String],\n  modelValue: {\n    type: Boolean,\n    default: true,\n  },\n  offsetX: [Number, String],\n  offsetY: [Number, String],\n  textColor: String,\n\n  ...makeComponentProps(),\n  ...makeLocationProps({ location: 'top end' } as const),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeTransitionProps({ transition: 'scale-rotate-transition' }),\n  ...makeDimensionProps(),\n}, 'VBadge')\n\nexport const VBadge = genericComponent<VBadgeSlots>()({\n  name: 'VBadge',\n\n  inheritAttrs: false,\n\n  props: makeVBadgeProps(),\n\n  setup (props, ctx) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(() => props.color)\n    const { roundedClasses } = useRounded(props)\n    const { t } = useLocale()\n    const { textColorClasses, textColorStyles } = useTextColor(() => props.textColor)\n    const { themeClasses } = useTheme()\n\n    const { locationStyles } = useLocation(props, true, side => {\n      const base = props.floating\n        ? (props.dot ? 2 : 4)\n        : (props.dot ? 8 : 12)\n\n      return base + (\n        ['top', 'bottom'].includes(side) ? Number(props.offsetY ?? 0)\n        : ['left', 'right'].includes(side) ? Number(props.offsetX ?? 0)\n        : 0\n      )\n    })\n\n    const { dimensionStyles } = useDimension(props)\n\n    useRender(() => {\n      const value = Number(props.content)\n      const content = (!props.max || isNaN(value)) ? props.content\n        : value <= Number(props.max) ? value\n        : `${props.max}+`\n\n      const [badgeAttrs, attrs] = pickWithRest(ctx.attrs as Record<string, any>, [\n        'aria-atomic',\n        'aria-label',\n        'aria-live',\n        'role',\n        'title',\n      ])\n\n      return (\n        <props.tag\n          class={[\n            'v-badge',\n            {\n              'v-badge--bordered': props.bordered,\n              'v-badge--dot': props.dot,\n              'v-badge--floating': props.floating,\n              'v-badge--inline': props.inline,\n            },\n            props.class,\n          ]}\n          { ...attrs }\n          style={ props.style }\n        >\n          <div class=\"v-badge__wrapper\">\n            { ctx.slots.default?.() }\n\n            <MaybeTransition transition={ props.transition }>\n              <span\n                v-show={ props.modelValue }\n                class={[\n                  'v-badge__badge',\n                  themeClasses.value,\n                  backgroundColorClasses.value,\n                  roundedClasses.value,\n                  textColorClasses.value,\n                ]}\n                style={[\n                  backgroundColorStyles.value,\n                  textColorStyles.value,\n                  dimensionStyles.value,\n                  props.inline ? {} : locationStyles.value,\n                ]}\n                aria-atomic=\"true\"\n                aria-label={ t(props.label, value) }\n                aria-live=\"polite\"\n                role=\"status\"\n                { ...badgeAttrs }\n              >\n                {\n                  props.dot ? undefined\n                  : ctx.slots.badge ? ctx.slots.badge?.()\n                  : props.icon ? <VIcon icon={ props.icon } />\n                  : content\n                }\n              </span>\n            </MaybeTransition>\n          </div>\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VBadge = InstanceType<typeof VBadge>\n","<template>\r\n  <v-container>\r\n    <v-row class=\"align-center justify-space-between mb-4\">\r\n      <v-col cols=\"auto\">\r\n        <h2 class=\"text-h5 font-weight-bold mb-0\">📋 Selecciona una mesa</h2>\r\n      </v-col>\r\n\r\n      <v-col cols=\"auto\" class=\"d-flex\" style=\"gap: 8px\">\r\n    <v-btn color=\"purple\" variant=\"tonal\" @click=\"$router.push({ name: 'PedidosFuera' })\">\r\n      <v-icon start>mdi-cake</v-icon>\r\n      Pedidos externos\r\n    </v-btn>\r\n       <v-btn v-if=\"rol === 'mesero'\" color=\"black\" variant=\"outlined\" @click=\"cerrarSesion\">\r\n       </v-btn>\r\n        <v-btn color=\"black\" variant=\"outlined\" @click=\"cerrarSesion\">\r\n          <v-icon left>mdi-logout</v-icon>\r\n          Cerrar sesión\r\n        </v-btn>\r\n      </v-col>\r\n    </v-row>\r\n\r\n    <v-row>\r\n      <v-col\r\n        v-for=\"mesa in mesas\"\r\n        :key=\"mesa.id_mesa\"\r\n        cols=\"6\"\r\n        sm=\"4\"\r\n        md=\"3\"\r\n      >\r\n        <v-card\r\n          :class=\"mesaCardClasses(mesa)\"\r\n          class=\"pa-4 d-flex flex-column align-center justify-center relative\"\r\n          height=\"120\"\r\n          @click=\"seleccionarMesa(mesa)\"\r\n        >\r\n          <!-- Badge con contador de artículos listos -->\r\n          <v-badge\r\n            v-if=\"readyByMesa[mesa.id_mesa]\"\r\n            :content=\"readyByMesa[mesa.id_mesa]\"\r\n            color=\"green\"\r\n            floating\r\n            offset-x=\"-8\"\r\n            offset-y=\"8\"\r\n          />\r\n          <v-icon size=\"32\" class=\"mb-2\">mdi-table-chair</v-icon>\r\n\r\n          <div class=\"text-subtitle-1 font-weight-medium\">\r\n            Mesa {{ mesa.numero }}\r\n          </div>\r\n\r\n          <!-- Chip de estado -->\r\n          <v-chip size=\"small\" :color=\"estadoColor(mesa.estado)\" variant=\"flat\" class=\"mt-1\">\r\n            <v-icon start size=\"16\">{{ estadoIcon(mesa.estado) }}</v-icon>\r\n            {{ estadoLabel(mesa.estado) }}\r\n          </v-chip>\r\n\r\n          <!-- Texto auxiliar cuando hay listos -->\r\n          <div v-if=\"readyByMesa[mesa.id_mesa]\" class=\"text-caption mt-1\">\r\n            {{ readyByMesa[mesa.id_mesa] }} listo(s) 🍽️\r\n          </div>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n\r\n    <!-- 🔹 Listado de artículos listos para servir -->\r\n    <v-card class=\"mt-6\" v-if=\"articulosListos.length\">\r\n      <v-card-title class=\"text-h6 d-flex align-center justify-space-between\">\r\n        🍽️ Artículos listos para servir\r\n        <v-btn size=\"small\" color=\"green\" variant=\"text\" @click=\"servirTodo\">\r\n          <v-icon start>mdi-check-all</v-icon> Servir todo\r\n        </v-btn>\r\n      </v-card-title>\r\n      <v-divider></v-divider>\r\n\r\n      <v-list>\r\n        <v-list-item\r\n          v-for=\"(articulo, index) in articulosListos\"\r\n          :key=\"articulo.id_mesa + '-' + articulo.nombre + '-' + index\"\r\n          @click=\"marcarServido(index)\"\r\n          class=\"cursor-pointer\"\r\n        >\r\n          <v-list-item-content>\r\n            <v-list-item-title>\r\n              <strong>Mesa {{ articulo.numeroMesa }}</strong> ·\r\n              <strong>{{ articulo.nombre }}</strong> listo para servir\r\n            </v-list-item-title>\r\n            <v-list-item-subtitle>\r\n              {{ new Date(articulo.timestamp).toLocaleTimeString() }}\r\n            </v-list-item-subtitle>\r\n          </v-list-item-content>\r\n          <!-- (Sin botón individual) -->\r\n        </v-list-item>\r\n      </v-list>\r\n    </v-card>\r\n\r\n    <!-- 🔹 Snackbar global -->\r\n    <v-snackbar v-model=\"showSnackbar\" timeout=\"6000\" :color=\"snackbarColor\" location=\"top\">\r\n      {{ snackbarMessage }}\r\n    </v-snackbar>\r\n  </v-container>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport axios from 'axios'\r\nimport { io } from 'socket.io-client'\r\n\r\n/* ===================== 🔌 SOCKET ===================== */\r\nconst socket = io('http://localhost:8080')\r\n\r\n/* ===================== 📦 STATE ===================== */\r\nconst router = useRouter()\r\nconst mesas = ref([])\r\nconst rol = ref(localStorage.getItem('rol'))\r\nconst articulosListos = ref([])\r\n\r\n/* ===================== 🔔 SNACKBAR ===================== */\r\nconst showSnackbar = ref(false)\r\nconst snackbarMessage = ref('')\r\nconst snackbarColor = ref('green')\r\n\r\nfunction addNotification(message, color = 'green') {\r\n  snackbarMessage.value = message\r\n  snackbarColor.value = color\r\n  showSnackbar.value = true\r\n}\r\n\r\n/* ===================== 🔊 SONIDO (opcional) ===================== */\r\nconst readyAudio = new Audio('/sounds/notify.mp3')\r\ndocument.addEventListener('click', () => {\r\n  readyAudio.play().then(() => { readyAudio.pause(); readyAudio.currentTime = 0 }).catch(() => {})\r\n}, { once: true })\r\nconst playReadySound = () => { readyAudio.currentTime = 0; readyAudio.play().catch(() => {}) }\r\n\r\n/* ===================== 💾 PERSISTENCIA DE ESTADO ===================== */\r\nconst LS_KEY_ESTADOS = 'mesaEstados'\r\nfunction getEstadosLS() {\r\n  try { return JSON.parse(localStorage.getItem(LS_KEY_ESTADOS)) || {} } catch { return {} }\r\n}\r\nfunction setEstadoLS(id_mesa, estado) {\r\n  const map = getEstadosLS(); map[id_mesa] = estado\r\n  localStorage.setItem(LS_KEY_ESTADOS, JSON.stringify(map))\r\n}\r\nfunction clearEstadoLS(id_mesa) {\r\n  const map = getEstadosLS(); delete map[id_mesa]\r\n  localStorage.setItem(LS_KEY_ESTADOS, JSON.stringify(map))\r\n}\r\n\r\n/* ===================== 🧮 HELPERS UI ===================== */\r\nconst readyByMesa = computed(() => {\r\n  const map = {}\r\n  for (const a of articulosListos.value) map[a.id_mesa] = (map[a.id_mesa] || 0) + 1\r\n  return map\r\n})\r\n/*\r\nfunction normalizar(estado) {\r\n  const s = (estado || '').toLowerCase()\r\n  if (s === 'servido' || s === 'pendiente de pago') return 'pendiente de pago'\r\n  return s\r\n}\r\nfunction estadoLabel(estado) {\r\n  switch (normalizar(estado)) {\r\n    case 'ocupada': return 'Ocupada'\r\n    case 'reservada': return 'Reservada'\r\n    case 'en preparación': return 'En preparación'\r\n    case 'listo': return 'Listo'\r\n    case 'pendiente de pago': return 'Pendiente de pago'\r\n    default: return 'Libre'\r\n  }\r\n}\r\nfunction estadoIcon(estado) {\r\n  switch (normalizar(estado)) {\r\n    case 'ocupada': return 'mdi-account-group'\r\n    case 'reservada': return 'mdi-bookmark'\r\n    case 'en preparación': return 'mdi-fire'\r\n    case 'listo': return 'mdi-check-circle'\r\n    case 'pendiente de pago': return 'mdi-cash-register'\r\n    default: return 'mdi-checkbox-blank-circle-outline'\r\n  }\r\n}\r\nfunction estadoColor(estado) {\r\n  switch (normalizar(estado)) {\r\n    case 'ocupada': return 'red'\r\n    case 'reservada': return 'orange'\r\n    case 'en preparación': return 'orange'\r\n    case 'listo': return 'green'\r\n    case 'pendiente de pago': return 'purple'\r\n    default: return 'green'\r\n  }\r\n}\r\nfunction mesaCardClasses(mesa) {\r\n  const base = ['mesa-card', 'rounded-lg']\r\n  const s = normalizar(mesa.estado)\r\n  if (s === 'ocupada') base.push('mesa-ocupada')\r\n  else if (s === 'reservada') base.push('mesa-reservada')\r\n  else if (s === 'en preparación') base.push('mesa-prep')\r\n  else if (s === 'pendiente de pago') base.push('mesa-pago')\r\n  else base.push('mesa-libre')\r\n  if (readyByMesa.value[mesa.id_mesa]) base.push('pulse-border')\r\n  return base\r\n}\r\n*/\r\nfunction normalizar(estado) {\r\n  const s = (estado || '').toLowerCase().trim()\r\n  // Unifica variantes del backend\r\n  if (s === 'ocupado' || s === 'ocupada') return 'ocupada'\r\n  if (s === 'pendiente') return 'pendiente'\r\n  if (s === 'servido' || s === 'pendiente de pago') return 'pendiente de pago'\r\n  // ya contemplas 'en preparación', 'listo'\r\n  return s\r\n}\r\n\r\nfunction estadoLabel(estado) {\r\n  switch (normalizar(estado)) {\r\n    case 'ocupada': return 'Ocupado'\r\n    case 'reservada': return 'Reservada'\r\n    case 'pendiente': return 'Pendiente'\r\n    case 'en preparación': return 'En preparación'\r\n    case 'listo': return 'Listo'\r\n    case 'pendiente de pago': return 'Pendiente de pago'\r\n    default: return 'Libre'\r\n  }\r\n}\r\n\r\nfunction estadoIcon(estado) {\r\n  switch (normalizar(estado)) {\r\n    case 'ocupada': return 'mdi-account-group'\r\n    case 'reservada': return 'mdi-bookmark'\r\n    case 'pendiente': return 'mdi-timer-sand'\r\n    case 'en preparación': return 'mdi-fire'\r\n    case 'listo': return 'mdi-check-circle'\r\n    case 'pendiente de pago': return 'mdi-cash-register'\r\n    default: return 'mdi-checkbox-blank-circle-outline'\r\n  }\r\n}\r\n\r\nfunction estadoColor(estado) {\r\n  switch (normalizar(estado)) {\r\n    case 'ocupada': return 'red'\r\n    case 'reservada': return 'orange'\r\n    case 'pendiente': return 'blue-grey' // o 'grey'\r\n    case 'en preparación': return 'orange'\r\n    case 'listo': return 'green'\r\n    case 'pendiente de pago': return 'purple'\r\n    default: return 'green'\r\n  }\r\n}\r\n\r\nfunction mesaCardClasses(mesa) {\r\n  const base = ['mesa-card', 'rounded-lg']\r\n  const s = normalizar(mesa.estado)\r\n  if (s === 'ocupada') base.push('mesa-ocupada')\r\n  else if (s === 'reservada') base.push('mesa-reservada')\r\n  else if (s === 'pendiente') base.push('mesa-pendiente')\r\n  else if (s === 'en preparación') base.push('mesa-prep')\r\n  else if (s === 'pendiente de pago') base.push('mesa-pago')\r\n  else base.push('mesa-libre')\r\n  if (readyByMesa.value[mesa.id_mesa]) base.push('pulse-border')\r\n  return base\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* ===================== 🔧 ACCIONES ===================== */\r\nfunction cerrarSesion() {\r\n  localStorage.clear()\r\n  window.location.href = '/'\r\n}\r\n\r\nconst cargarMesas = async () => {\r\n  try {\r\n    const { data } = await axios.get('http://localhost:8080/api/mesas')\r\n    const guardados = getEstadosLS()\r\n    // Si hay estado guardado para la mesa, úsalo\r\n    mesas.value = data.map(m => guardados[m.id_mesa]\r\n      ? { ...m, estado: guardados[m.id_mesa] }\r\n      : m\r\n    )\r\n  } catch (error) {\r\n    console.error('Error al cargar mesas:', error)\r\n  }\r\n}\r\n\r\n// Servir un artículo al tocar la fila\r\nfunction marcarServido(index) {\r\n  const item = articulosListos.value[index]\r\n  if (!item) return\r\n  socket.emit('articulo-servido', {\r\n    id_mesa: item.id_mesa,\r\n    nombre_articulo: item.nombre,\r\n    hora_servido: new Date().toISOString()\r\n  })\r\n  articulosListos.value.splice(index, 1)\r\n  addNotification(`🍽️ \"${item.nombre}\" de mesa ${item.numeroMesa} servido.`, 'green')\r\n}\r\n\r\n// Servir todos\r\nfunction servirTodo() {\r\n  const items = [...articulosListos.value]\r\n  articulosListos.value = []\r\n  for (const item of items) {\r\n    socket.emit('articulo-servido', {\r\n      id_mesa: item.id_mesa,\r\n      nombre_articulo: item.nombre,\r\n      hora_servido: new Date().toISOString()\r\n    })\r\n  }\r\n  addNotification(`✅ ${items.length} artículo(s) servidos.`, 'green')\r\n}\r\n\r\n// Al tocar una mesa: servir los listos de esa mesa y navegar\r\nfunction seleccionarMesa(mesa) {\r\n  const restantes = []\r\n  const servidos = []\r\n  for (const a of articulosListos.value) {\r\n    if (a.id_mesa === mesa.id_mesa) servidos.push(a)\r\n    else restantes.push(a)\r\n  }\r\n  articulosListos.value = restantes\r\n\r\n  if (servidos.length) {\r\n    servidos.forEach(a => {\r\n      socket.emit('articulo-servido', {\r\n        id_mesa: a.id_mesa,\r\n        nombre_articulo: a.nombre,\r\n        hora_servido: new Date().toISOString()\r\n      })\r\n    })\r\n    addNotification(`🍽️ ${servidos.length} artículo(s) de la mesa ${mesa.numero} servidos.`, 'green')\r\n  }\r\n\r\n  router.push({ name: 'NuevoPedido', params: { mesaId: mesa.id_mesa } })\r\n}\r\n\r\n/* ===================== ⚡ SOCKETS ===================== */\r\nonMounted(() => {\r\n  cargarMesas()\r\n\r\n  // Pago → mesa libre\r\n  socket.on('pedido-pagado', ({ id_mesa }) => {\r\n    const mesa = mesas.value.find(m => m.id_mesa === id_mesa)\r\n    if (mesa) mesa.estado = 'libre'\r\n    clearEstadoLS(id_mesa) // limpiar persistencia\r\n  })\r\n/*\r\n  // Cambios de estado emitidos por Cocina (respetar tal cual)\r\n  socket.on('estado-pedido-actualizado', (p) => {\r\n    const nuevoEstado = (p.estado || '').toLowerCase()\r\n    const id_mesa = p.id_mesa\r\n    if (!['pendiente', 'en preparación', 'listo', 'servido', 'pendiente de pago'].includes(nuevoEstado)) return\r\n\r\n    const mesa = mesas.value.find(m => m.id_mesa === id_mesa)\r\n    if (!mesa) return\r\n\r\n    // Mapeo visual final\r\n    const estadoFinal =\r\n      (nuevoEstado === 'servido' || nuevoEstado === 'pendiente de pago')\r\n        ? 'pendiente de pago'\r\n        : nuevoEstado\r\n\r\n    mesa.estado = estadoFinal\r\n    setEstadoLS(id_mesa, estadoFinal)\r\n\r\n    const msg =\r\n      estadoFinal === 'en preparación' ? `🔥 Mesa ${mesa.numero}: pedido en preparación`\r\n      : estadoFinal === 'listo' ? `✅ Mesa ${mesa.numero}: pedido LISTO`\r\n      : estadoFinal === 'pendiente de pago' ? `💳 Mesa ${mesa.numero}: pendiente de pago`\r\n      : `ℹ️ Mesa ${mesa.numero}: ${estadoFinal}`\r\n\r\n    const color =\r\n      estadoFinal === 'en preparación' ? 'orange'\r\n      : estadoFinal === 'listo' ? 'green'\r\n      : estadoFinal === 'pendiente de pago' ? 'purple'\r\n      : 'grey'\r\n\r\n    addNotification(msg, color)\r\n    if (estadoFinal === 'listo') playReadySound()\r\n  })\r\n\r\n*/\r\nsocket.on('estado-pedido-actualizado', (p) => {\r\n  const nuevoEstado = (p.estado || '').toLowerCase()\r\n  const id_mesa = p.id_mesa\r\n  if (!['pendiente', 'en preparación', 'listo', 'servido', 'pendiente de pago', 'ocupado', 'ocupada', 'reservada'].includes(nuevoEstado)) return\r\n\r\n  const mesa = mesas.value.find(m => m.id_mesa === id_mesa)\r\n  if (!mesa) return\r\n\r\n  const n = normalizar(nuevoEstado) // usa tu normalizador\r\n  const estadoFinal = n\r\n\r\n  mesa.estado = estadoFinal\r\n  setEstadoLS(id_mesa, estadoFinal)\r\n\r\n  const msg =\r\n    estadoFinal === 'pendiente' ? `⏳ Mesa ${mesa.numero}: pedido pendiente`\r\n    : estadoFinal === 'en preparación' ? `🔥 Mesa ${mesa.numero}: pedido en preparación`\r\n    : estadoFinal === 'listo' ? `✅ Mesa ${mesa.numero}: pedido LISTO`\r\n    : estadoFinal === 'pendiente de pago' ? `💳 Mesa ${mesa.numero}: pendiente de pago`\r\n    : estadoFinal === 'ocupada' ? `👥 Mesa ${mesa.numero}: ocupada`\r\n    : `ℹ️ Mesa ${mesa.numero}: ${estadoFinal}`\r\n\r\n  const color =\r\n    estadoFinal === 'pendiente' ? 'blue-grey'\r\n    : estadoFinal === 'en preparación' ? 'orange'\r\n    : estadoFinal === 'listo' ? 'green'\r\n    : estadoFinal === 'pendiente de pago' ? 'purple'\r\n    : estadoFinal === 'ocupada' ? 'red'\r\n    : 'grey'\r\n\r\n  addNotification(msg, color)\r\n  if (estadoFinal === 'listo') playReadySound()\r\n})\r\n\r\n\r\n  // Artículo individual preparado (NO tocar estado aquí)\r\n  socket.on('articulo-preparado', ({ nombre_articulo, id_mesa }) => {\r\n    const mesa = mesas.value.find(m => m.id_mesa === id_mesa)\r\n    const numeroMesa = mesa?.numero || id_mesa\r\n    const nombre = nombre_articulo\r\n\r\n    const yaExiste = articulosListos.value.some(a => a.nombre === nombre && a.id_mesa === id_mesa)\r\n    if (!yaExiste) {\r\n      articulosListos.value.push({\r\n        nombre,\r\n        id_mesa,\r\n        numeroMesa,\r\n        timestamp: new Date()\r\n      })\r\n      addNotification(`✅ El artículo ${nombre} de la mesa ${numeroMesa} está listo.`, 'green')\r\n      playReadySound()\r\n    }\r\n  })\r\n})\r\n\r\nonUnmounted(() => {\r\n  socket.off('pedido-pagado')\r\n  socket.off('estado-pedido-actualizado')\r\n  socket.off('articulo-preparado')\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.relative { position: relative; }\r\n.cursor-pointer { cursor: pointer; }\r\n\r\n.mesa-card { background: var(--v-theme-surface); transition: box-shadow .2s, transform .1s; }\r\n.mesa-card:hover { transform: translateY(-2px); }\r\n.mesa-ocupada   { background: #ef5350; color: #fff; }\r\n.mesa-reservada { background: #ffcc80; }\r\n.mesa-prep      { background: #ffd180; } /* en preparación */\r\n.mesa-pago      { background: #ce93d8; color: #fff; } /* pendiente de pago */\r\n.mesa-libre     { background: #a5d6a7; }\r\n.mesa-pendiente { background: #cfd8dc; } /* gris azulado suave */\r\n\r\n.pulse-border {\r\n  box-shadow: 0 0 0 0 rgba(76, 175, 80, 0.8);\r\n  animation: pulse 1.8s infinite;\r\n}\r\n@keyframes pulse {\r\n  0%   { box-shadow: 0 0 0 0 rgba(76, 175, 80, 0.7); }\r\n  70%  { box-shadow: 0 0 0 12px rgba(76, 175, 80, 0); }\r\n  100% { box-shadow: 0 0 0 0 rgba(76, 175, 80, 0); }\r\n}\r\n</style>\r\n","import script from \"./PedidosActivos.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PedidosActivos.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PedidosActivos.vue?vue&type=style&index=0&id=c7458224&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c7458224\"]])\n\nexport default __exports__","// Styles\nimport './VSnackbar.sass'\n\n// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\nimport { makeVOverlayProps } from '@/components/VOverlay/VOverlay'\nimport { VProgressLinear } from '@/components/VProgressLinear'\n\n// Composables\nimport { useLayout } from '@/composables'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { VuetifyLayoutKey } from '@/composables/layout'\nimport { makeLocationProps } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { useScopeId } from '@/composables/scopeId'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useToggleScope } from '@/composables/toggleScope'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Utilities\nimport { computed, inject, mergeProps, nextTick, onMounted, onScopeDispose, ref, shallowRef, watch, watchEffect } from 'vue'\nimport { genericComponent, omit, propsFactory, refElement, useRender } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\ntype VSnackbarSlots = {\n  activator: { isActive: boolean, props: Record<string, any> }\n  default: never\n  actions: { isActive: Ref<boolean> }\n  text: never\n}\n\nfunction useCountdown (milliseconds: () => number) {\n  const time = shallowRef(milliseconds())\n  let timer = -1\n\n  function clear () {\n    clearInterval(timer)\n  }\n\n  function reset () {\n    clear()\n\n    nextTick(() => time.value = milliseconds())\n  }\n\n  function start (el?: HTMLElement) {\n    const style = el ? getComputedStyle(el) : { transitionDuration: 0.2 }\n    const interval = parseFloat(style.transitionDuration) * 1000 || 200\n\n    clear()\n\n    if (time.value <= 0) return\n\n    const startTime = performance.now()\n    timer = window.setInterval(() => {\n      const elapsed = performance.now() - startTime + interval\n      time.value = Math.max(milliseconds() - elapsed, 0)\n\n      if (time.value <= 0) clear()\n    }, interval)\n  }\n\n  onScopeDispose(clear)\n\n  return { clear, time, start, reset }\n}\n\nexport const makeVSnackbarProps = propsFactory({\n  multiLine: Boolean,\n  text: String,\n  timer: [Boolean, String],\n  timeout: {\n    type: [Number, String],\n    default: 5000,\n  },\n  vertical: Boolean,\n\n  ...makeLocationProps({ location: 'bottom' } as const),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeVariantProps(),\n  ...makeThemeProps(),\n  ...omit(makeVOverlayProps({\n    transition: 'v-snackbar-transition',\n  }), ['persistent', 'noClickAnimation', 'scrim', 'scrollStrategy']),\n}, 'VSnackbar')\n\nexport const VSnackbar = genericComponent<VSnackbarSlots>()({\n  name: 'VSnackbar',\n\n  props: makeVSnackbarProps(),\n\n  emits: {\n    'update:modelValue': (v: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { positionClasses } = usePosition(props)\n    const { scopeId } = useScopeId()\n    const { themeClasses } = provideTheme(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { roundedClasses } = useRounded(props)\n    const countdown = useCountdown(() => Number(props.timeout))\n\n    const overlay = ref<VOverlay>()\n    const timerRef = ref<VProgressLinear>()\n    const isHovering = shallowRef(false)\n    const startY = shallowRef(0)\n    const mainStyles = ref()\n    const hasLayout = inject(VuetifyLayoutKey, undefined)\n\n    useToggleScope(() => !!hasLayout, () => {\n      const layout = useLayout()\n\n      watchEffect(() => {\n        mainStyles.value = layout.mainStyles.value\n      })\n    })\n\n    watch(isActive, startTimeout)\n    watch(() => props.timeout, startTimeout)\n\n    onMounted(() => {\n      if (isActive.value) startTimeout()\n    })\n\n    let activeTimeout = -1\n    function startTimeout () {\n      countdown.reset()\n      window.clearTimeout(activeTimeout)\n      const timeout = Number(props.timeout)\n\n      if (!isActive.value || timeout === -1) return\n\n      const element = refElement(timerRef.value)\n\n      countdown.start(element)\n\n      activeTimeout = window.setTimeout(() => {\n        isActive.value = false\n      }, timeout)\n    }\n\n    function clearTimeout () {\n      countdown.reset()\n      window.clearTimeout(activeTimeout)\n    }\n\n    function onPointerenter () {\n      isHovering.value = true\n      clearTimeout()\n    }\n\n    function onPointerleave () {\n      isHovering.value = false\n      startTimeout()\n    }\n\n    function onTouchstart (event: TouchEvent) {\n      startY.value = event.touches[0].clientY\n    }\n\n    function onTouchend (event: TouchEvent) {\n      if (Math.abs(startY.value - event.changedTouches[0].clientY) > 50) {\n        isActive.value = false\n      }\n    }\n\n    function onAfterLeave () {\n      if (isHovering.value) onPointerleave()\n    }\n\n    const locationClasses = computed(() => {\n      return props.location.split(' ').reduce((acc, loc) => {\n        acc[`v-snackbar--${loc}`] = true\n\n        return acc\n      }, {} as Record<string, any>)\n    })\n\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props)\n      const hasContent = !!(slots.default || slots.text || props.text)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          class={[\n            'v-snackbar',\n            {\n              'v-snackbar--active': isActive.value,\n              'v-snackbar--multi-line': props.multiLine && !props.vertical,\n              'v-snackbar--timer': !!props.timer,\n              'v-snackbar--vertical': props.vertical,\n            },\n            locationClasses.value,\n            positionClasses.value,\n            props.class,\n          ]}\n          style={[\n            mainStyles.value,\n            props.style,\n          ]}\n          { ...overlayProps }\n          v-model={ isActive.value }\n          contentProps={ mergeProps({\n            class: [\n              'v-snackbar__wrapper',\n              themeClasses.value,\n              colorClasses.value,\n              roundedClasses.value,\n              variantClasses.value,\n            ],\n            style: [\n              colorStyles.value,\n            ],\n            onPointerenter,\n            onPointerleave,\n          }, overlayProps.contentProps)}\n          persistent\n          noClickAnimation\n          scrim={ false }\n          scrollStrategy=\"none\"\n          _disableGlobalStack\n          onTouchstartPassive={ onTouchstart }\n          onTouchend={ onTouchend }\n          onAfterLeave={ onAfterLeave }\n          { ...scopeId }\n          v-slots={{ activator: slots.activator }}\n        >\n          { genOverlays(false, 'v-snackbar') }\n\n          { props.timer && !isHovering.value && (\n            <div key=\"timer\" class=\"v-snackbar__timer\">\n              <VProgressLinear\n                ref={ timerRef }\n                color={ typeof props.timer === 'string' ? props.timer : 'info' }\n                max={ props.timeout }\n                model-value={ countdown.time.value }\n              />\n            </div>\n          )}\n\n          { hasContent && (\n            <div\n              key=\"content\"\n              class=\"v-snackbar__content\"\n              role=\"status\"\n              aria-live=\"polite\"\n            >\n              { slots.text?.() ?? props.text }\n\n              { slots.default?.() }\n            </div>\n          )}\n\n          { slots.actions && (\n            <VDefaultsProvider\n              defaults={{\n                VBtn: {\n                  variant: 'text',\n                  ripple: false,\n                  slim: true,\n                },\n              }}\n            >\n              <div class=\"v-snackbar__actions\">\n                { slots.actions({ isActive }) }\n              </div>\n            </VDefaultsProvider>\n          )}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({}, overlay)\n  },\n})\n\nexport type VSnackbar = InstanceType<typeof VSnackbar>\n"],"names":["makeVBadgeProps","propsFactory","bordered","Boolean","color","String","content","Number","dot","floating","icon","IconValue","inline","label","type","default","max","modelValue","offsetX","offsetY","textColor","makeComponentProps","makeLocationProps","location","makeRoundedProps","makeTagProps","makeThemeProps","makeTransitionProps","transition","makeDimensionProps","VBadge","genericComponent","name","inheritAttrs","props","setup","ctx","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","roundedClasses","useRounded","t","useLocale","textColorClasses","textColorStyles","useTextColor","themeClasses","useTheme","locationStyles","useLocation","side","base","includes","dimensionStyles","useDimension","useRender","value","isNaN","badgeAttrs","attrs","pickWithRest","_createVNode","tag","_mergeProps","class","style","_createElementVNode","slots","MaybeTransition","_withDirectives","undefined","badge","VIcon","_vShow","LS_KEY_ESTADOS","socket","io","router","useRouter","mesas","ref","rol","localStorage","getItem","articulosListos","showSnackbar","snackbarMessage","snackbarColor","addNotification","message","readyAudio","Audio","document","addEventListener","play","then","pause","currentTime","catch","once","playReadySound","getEstadosLS","JSON","parse","setEstadoLS","id_mesa","estado","map","setItem","stringify","clearEstadoLS","readyByMesa","computed","a","normalizar","s","toLowerCase","trim","estadoLabel","estadoIcon","estadoColor","mesaCardClasses","mesa","push","cerrarSesion","clear","window","href","cargarMesas","async","data","axios","get","guardados","m","error","console","marcarServido","index","item","emit","nombre_articulo","nombre","hora_servido","Date","toISOString","splice","numeroMesa","servirTodo","items","length","seleccionarMesa","restantes","servidos","forEach","numero","params","mesaId","onMounted","on","find","p","nuevoEstado","n","estadoFinal","msg","yaExiste","some","timestamp","onUnmounted","off","_createBlock","_component_v_container","_component_v_row","_component_v_col","cols","_cache","_component_v_btn","variant","onClick","$event","_ctx","$router","_component_v_icon","start","left","_createElementBlock","_Fragment","_renderList","key","sm","md","_component_v_card","_normalizeClass","height","_component_v_badge","size","_hoisted_1","_toDisplayString","_component_v_chip","_hoisted_2","_component_v_card_title","_component_v_divider","_component_v_list","articulo","_component_v_list_item","_component_v_list_item_content","_component_v_list_item_title","_component_v_list_item_subtitle","toLocaleTimeString","_component_v_snackbar","timeout","__exports__","useCountdown","milliseconds","time","shallowRef","timer","clearInterval","reset","nextTick","el","getComputedStyle","transitionDuration","interval","parseFloat","startTime","performance","now","setInterval","elapsed","Math","onScopeDispose","makeVSnackbarProps","multiLine","text","vertical","makePositionProps","makeVariantProps","omit","makeVOverlayProps","VSnackbar","emits","v","_ref","isActive","useProxiedModel","positionClasses","usePosition","scopeId","useScopeId","provideTheme","colorClasses","colorStyles","variantClasses","useVariant","countdown","overlay","timerRef","isHovering","startY","mainStyles","hasLayout","inject","VuetifyLayoutKey","useToggleScope","layout","useLayout","watchEffect","watch","startTimeout","activeTimeout","clearTimeout","element","refElement","setTimeout","onPointerenter","onPointerleave","onTouchstart","event","touches","clientY","onTouchend","abs","changedTouches","onAfterLeave","locationClasses","split","reduce","acc","loc","overlayProps","VOverlay","filterProps","hasContent","mergeProps","contentProps","genOverlays","VProgressLinear","actions","VDefaultsProvider","VBtn","ripple","slim","activator","forwardRefs"],"sourceRoot":""}